{"ast":null,"code":"import React,{useEffect,useContext,useRef}from'react';import{Link,useParams}from'react-router-dom';import{getSmashystreamUrl,getSuperembedUrl,get2embedUrl}from'../movies';import{useState}from'react';import Contextpage from'../Contextpage';import{HiChevronLeft}from\"react-icons/hi\";import ReactPlayer from'react-player';import{FaPlay}from'react-icons/fa';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Player=()=>{const{setHeader}=useContext(Contextpage);const[moviedet,setMoviedet]=useState([]);const{id}=useParams();const[isPlaying,setIsPlaying]=useState(false);const[showPlayButton,setShowPlayButton]=useState(true);const playerRef=useRef(null);const APIKEY=process.env.REACT_APP_API_KEY;const fetchMovie=async()=>{const data=await fetch(\"https://api.themoviedb.org/3/movie/\".concat(id,\"?api_key=\").concat(APIKEY,\"&language=en-US\"));const moviedetail=await data.json();setMoviedet(moviedetail);};useEffect(()=>{fetchMovie();setHeader(\"Player\");},[]);const onClickButton=()=>{setIsPlaying(true);setShowPlayButton(false);// You can add additional logic here if needed\n// playerRef.current?.seekTo(0);\n// playerRef.current.play()\n};const handleOnEnded=()=>{// Show the play button again when the video ends\nsetShowPlayButton(true);};// setTimeout(() => {\n//   isPlaying && setShowPlayButton(false);\n// }, 3000);\ndocument.title=\"Movies | \".concat(moviedet.title);return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full relative \",children:[showPlayButton&&/*#__PURE__*/_jsx(\"button\",{className:\"\".concat(showPlayButton?'block':'hidden',\" w-12 h-12 md:w-24 md:h-24 rounded-full bg-yellow-400 \\n        absolute  top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 cursor-pointer z-50\\n        focus:outline-none flex items-center justify-center\"),onClick:()=>onClickButton(),children:/*#__PURE__*/_jsx(FaPlay,{className:\"text-white text-lg md:text-3xl cursor-pointer\"})}),/*#__PURE__*/_jsx(ReactPlayer,{url:\"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\",controls:true,playing:isPlaying,onPause:()=>{setShowPlayButton(true);setIsPlaying(false);},onPlay:onClickButton,onEnded:handleOnEnded,ref:playerRef,playIcon:/*#__PURE__*/_jsx(\"div\",{children:\"\\xE1dasdk\"}),width:\"100%\",height:'100%'})]});};export default Player;","map":{"version":3,"names":["React","useEffect","useContext","useRef","Link","useParams","getSmashystreamUrl","getSuperembedUrl","get2embedUrl","useState","Contextpage","HiChevronLeft","ReactPlayer","FaPlay","jsx","_jsx","jsxs","_jsxs","Player","setHeader","moviedet","setMoviedet","id","isPlaying","setIsPlaying","showPlayButton","setShowPlayButton","playerRef","APIKEY","process","env","REACT_APP_API_KEY","fetchMovie","data","fetch","concat","moviedetail","json","onClickButton","handleOnEnded","document","title","className","children","onClick","url","controls","playing","onPause","onPlay","onEnded","ref","playIcon","width","height"],"sources":["/Users/admin/Desktop/movie/src/pages/Player.jsx"],"sourcesContent":["import React, { useEffect, useContext, useRef } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { getSmashystreamUrl, getSuperembedUrl, get2embedUrl } from '../movies'\nimport { useState } from 'react'\nimport Contextpage from '../Contextpage'\nimport { HiChevronLeft } from \"react-icons/hi\";\nimport ReactPlayer from 'react-player'\nimport { FaPlay } from 'react-icons/fa'\n\n\nconst Player = () => {\n\n  const { setHeader } = useContext(Contextpage);\n  const [moviedet, setMoviedet] = useState([]);\n  const { id } = useParams()\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [showPlayButton, setShowPlayButton] = useState(true);\n  const playerRef = useRef(null);\n\n  const APIKEY = process.env.REACT_APP_API_KEY;\n  const fetchMovie = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}&language=en-US`\n    );\n    const moviedetail = await data.json();\n    setMoviedet(moviedetail);\n  };\n\n  useEffect(() => {\n    fetchMovie()\n    setHeader(\"Player\")\n  }, []);\n\n\n  const onClickButton = () => {\n    setIsPlaying(true)\n    setShowPlayButton(false);\n    // You can add additional logic here if needed\n    // playerRef.current?.seekTo(0);\n    // playerRef.current.play()\n  }\n\n  const handleOnEnded = () => {\n    // Show the play button again when the video ends\n    setShowPlayButton(true);\n  };\n\n  // setTimeout(() => {\n  //   isPlaying && setShowPlayButton(false);\n  // }, 3000);\n\n  document.title = `Movies | ${moviedet.title}`\n\n  return (\n    <div className=\"w-full relative \">\n      {/* <button onClick={()=>history.back()} className='fixed z-10 text-4xl text-black bg-white m-3 md:m-5 rounded-full'><HiChevronLeft /></button> */}\n      {showPlayButton && <button className={`${showPlayButton ? 'block' : 'hidden'} w-12 h-12 md:w-24 md:h-24 rounded-full bg-yellow-400 \n        absolute  top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 cursor-pointer z-50\n        focus:outline-none flex items-center justify-center`} onClick={() => onClickButton()}>\n        <FaPlay className='text-white text-lg md:text-3xl cursor-pointer' /></button>}\n      <ReactPlayer url='https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8'\n        controls={true}\n        playing={isPlaying}\n        onPause={()=> {\n          setShowPlayButton(true);\n          setIsPlaying(false);\n        }}\n        onPlay={onClickButton}\n        onEnded={handleOnEnded}\n        ref={playerRef}\n        playIcon={<div>Ã¡dasdk</div>}\n        width={\"100%\"} height={'100%'} />\n    </div>\n  )\n}\n\nexport default Player"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}