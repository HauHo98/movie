[{"/Users/admin/Desktop/movie/src/index.js":"1","/Users/admin/Desktop/movie/src/App.js":"2","/Users/admin/Desktop/movie/src/reportWebVitals.js":"3","/Users/admin/Desktop/movie/src/Contextpage.jsx":"4","/Users/admin/Desktop/movie/src/pages/Search.jsx":"5","/Users/admin/Desktop/movie/src/components/Navbar.jsx":"6","/Users/admin/Desktop/movie/src/pages/Upcoming.jsx":"7","/Users/admin/Desktop/movie/src/components/Detail.jsx":"8","/Users/admin/Desktop/movie/src/pages/Trending.jsx":"9","/Users/admin/Desktop/movie/src/pages/Container.jsx":"10","/Users/admin/Desktop/movie/src/pages/Player.jsx":"11","/Users/admin/Desktop/movie/src/pages/Home.jsx":"12","/Users/admin/Desktop/movie/src/pages/Favoritepage.jsx":"13","/Users/admin/Desktop/movie/src/components/MovieCard.jsx":"14","/Users/admin/Desktop/movie/src/components/HeroMovies.jsx":"15","/Users/admin/Desktop/movie/src/movies.js":"16","/Users/admin/Desktop/movie/src/components/Header.jsx":"17","/Users/admin/Desktop/movie/src/components/Searchbar.jsx":"18","/Users/admin/Desktop/movie/src/components/Movies.jsx":"19","/Users/admin/Desktop/movie/src/components/Genre.jsx":"20"},{"size":628,"mtime":1699701063216,"results":"21","hashOfConfig":"22"},{"size":1928,"mtime":1699701063216,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1699701063218,"results":"24","hashOfConfig":"22"},{"size":4323,"mtime":1699701063216,"results":"25","hashOfConfig":"22"},{"size":1774,"mtime":1699689662106,"results":"26","hashOfConfig":"22"},{"size":3133,"mtime":1699689662105,"results":"27","hashOfConfig":"22"},{"size":1994,"mtime":1699689662107,"results":"28","hashOfConfig":"22"},{"size":5724,"mtime":1699701063216,"results":"29","hashOfConfig":"22"},{"size":2443,"mtime":1699689662106,"results":"30","hashOfConfig":"22"},{"size":467,"mtime":1699689662105,"results":"31","hashOfConfig":"22"},{"size":2585,"mtime":1699701063218,"results":"32","hashOfConfig":"22"},{"size":3471,"mtime":1699689662106,"results":"33","hashOfConfig":"22"},{"size":1916,"mtime":1699689662106,"results":"34","hashOfConfig":"22"},{"size":2766,"mtime":1699689662104,"results":"35","hashOfConfig":"22"},{"size":2627,"mtime":1699689662104,"results":"36","hashOfConfig":"22"},{"size":339,"mtime":1699665014144,"results":"37","hashOfConfig":"22"},{"size":675,"mtime":1699665014143,"results":"38","hashOfConfig":"22"},{"size":1706,"mtime":1699665014144,"results":"39","hashOfConfig":"22"},{"size":4020,"mtime":1699689662104,"results":"40","hashOfConfig":"22"},{"size":1083,"mtime":1699665014143,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zira2n",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},"/Users/admin/Desktop/movie/src/index.js",[],[],"/Users/admin/Desktop/movie/src/App.js",["117","118"],[],"import React from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { Detail } from './components/Detail';\nimport Navbar from './components/Navbar'\nimport Container from './pages/Container'\nimport Trending from './pages/Trending';\nimport Upcoming from './pages/Upcoming';\nimport Favorite from './pages/Favoritepage';\nimport { MovieProvider } from \"./Contextpage\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Player from './pages/Player';\nimport Search from './pages/Search';\nimport { Helmet } from \"react-helmet\";\nimport logo from \"./assets/images/logo.png\"\nimport Home from './pages/Home';\n\nfunction App() {\n\n  return (\n    <MovieProvider>\n      <Helmet>\n       <meta property=\"og:image\" content={logo}/>\n      </Helmet>\n      <ToastContainer\n        position=\"bottom-center\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss={false}\n        draggable\n        pauseOnHover\n        theme=\"dark\"\n      />\n\n      <Navbar />\n      <div>\n        <Routes>\n          <Route path='/' element={<Home />} />\n          <Route path='/genres' element={<Container />} />\n          <Route path='/upcoming' element={<Upcoming />} />\n          <Route path='/moviedetail/:id' element={<Detail />} />\n          <Route path=\"/favorite\" element={<Favorite />} />\n          <Route path=\"/player/:id/:title\" element={<Player />} /> {/*Route-1 For Player, Title is just for beauty of url, it is not used anywhere.*/}\n          <Route path=\"/player/:id\" element={<Player />} /> {/*Route-2 For Player. Movie still available even if someone removes Title from end of the url.*/}\n          <Route path=\"/search/:query\" element={<Container/>}/>\n          <Route path=\"/search/\" element={<Container/>}/>\n        </Routes>\n      </div>\n    </MovieProvider>\n  )\n}\n\nexport default App\n","/Users/admin/Desktop/movie/src/reportWebVitals.js",[],[],"/Users/admin/Desktop/movie/src/Contextpage.jsx",[],[],"/Users/admin/Desktop/movie/src/pages/Search.jsx",["119","120","121","122","123","124","125","126","127"],[],"import React, { useEffect, useContext } from 'react'\nimport Contextpage from '../Contextpage';\nimport MovieCard from '../components/MovieCard.jsx';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Header from '../components/Header';\n// import { Pagebtn } from '../components/Pagebtn';\nimport { Link, useParams } from 'react-router-dom'\nimport { HiChevronLeft } from \"react-icons/hi\";\nimport { nanoid } from 'nanoid';\n\n\nfunction Search() {\n\n    const { searchedMovies, loader, page, setPage, totalPage, setMovies, activegenre, filteredGenre, fetchSearch } = useContext(Contextpage);\n    const { query } = useParams()\n\n    useEffect(() => {\n        // Call fetchSearch(query) only once when the component mounts\n        fetchSearch(query);\n    }, [query]); // Only re-run if 'query' or 'fetchSearch' changes\n\n    return (\n        <section>\n            <div className='w-full  md:p-10 mb-20 md:mb-0'>\n                <Header />\n                <motion.div\n                    layout\n                    className=\"flex flex-wrap relative justify-evenly md:justify-around\">\n                    <AnimatePresence>\n                        {\n                            loader ? <span className=\"loader m-10\"></span> :\n                                <>\n                                        {searchedMovies.map((movie) => (\n                                            <MovieCard key={nanoid()} movie={movie} />\n                                        ))}\n                                </>\n                        }\n                    </AnimatePresence>\n                </motion.div>\n            </div>\n        </section>\n\n    )\n}\n\nexport default Search\n\n\n//   `https://api.themoviedb.org/3/trending/all/day?api_key=b454aa11fb4b5fc5b515d2e80a898a1c&page=${page}`","/Users/admin/Desktop/movie/src/components/Navbar.jsx",["128"],[],"import React, { useState, useContext } from \"react\";\nimport logo from \"../assets/images/logo.png\"\nimport { Link } from \"react-router-dom\";\nimport Contextpage from '../Contextpage';\nimport { motion } from \"framer-motion\";\nimport { FaAlignRight, FaRegWindowClose } from \"react-icons/fa\";\nimport Searchbar from \"./Searchbar\";\n\nfunction Navbar() {\n\n    const { header, } = useContext(Contextpage);\n    const [activemobile, setActivemobile] = useState(false);\n    const [showMenu, setShowMenu] = useState(false);\n\n    const Navdata = [\n    \n        {\n            id: 1,\n            headername: \"Trending Movies\",\n            Name: \"Trending\",\n            link:\"/\"\n        },\n        // {\n        //     id: 2,\n        //     headername: \"Genres\",\n        //     Name: \"Genres\",\n        //     link : \"/genres\"\n        // },\n        {\n            id: 2,\n            headername: \"Upcoming Movies\",\n            Name: \"Upcoming\",\n            link:\"/upcoming\"\n        },\n        {\n            id: 3,\n            headername: \"Favorite Movies\",\n            Name: \"Favorites\",\n            link:\"/favorite\"\n        }\n    ]\n\n    return (\n        <>\n            {/* mobilebutton */}\n            <nav className={` w-full flex flex-col md:flex-row md:justify-between px-8 py-2 z-40 relative items-center\n            bg-gradient-to-b from-black\n            `}>\n                <div className=\"flex md:flex-row justify-between items-center w-full md:w-auto\">\n                <motion.div\n                    className=\"w-[150px]\"\n                    animate={{ scale: 1 }}\n                    initial={{ scale: 0 }}\n                    transition={{ duration: 0.4  }}\n                >\n                    <Link to=\"/\" className=\"logo flex justify-center items-center gap-2\" onClick={() => setActivemobile(!activemobile)}>\n                        <img src={logo} alt=\"logo\" className=\"w-12\" />\n                        <h1 className=\"text-white font-bold text-2xl text-center\">Movies</h1>\n                    </Link>\n                </motion.div>\n                <div onClick={()=> setShowMenu(!showMenu)}\n                className=\"md:hidden text-white text-3xl\">{!showMenu ? <FaAlignRight/> : <FaRegWindowClose/>}</div>\n                \n\n\n                <ul className={`${showMenu ? 'block' : 'hidden'} md:flex bg-black md:bg-transparent fixed md:relative left-0 md:left-auto  top-[56px] md:top-auto\n                 text-white font-semibold text-[20px] md:text-[16px] text-center px-5 w-full md:w-[50%] flex-1 h-full md:h-auto`}>\n                    {Navdata.map((data) => (\n                            <Link key={data.id} to={data.link}><li className={`${header == data.headername ? ' text-yellow-400 md:text-white' : 'text-slate-500'} \n                            py-2 px-5 my-2  hover:text-white`} onClick={() => {\n                                setShowMenu(false);\n                                setActivemobile(!activemobile)\n                            }}>{data.Name}</li></Link>\n                    ))}\n\n                </ul>\n                </div>\n                 <Searchbar />\n            </nav>\n        </>\n    )\n}\n\nexport default Navbar\n","/Users/admin/Desktop/movie/src/pages/Upcoming.jsx",["129","130"],[],"import React, { useEffect, useContext } from 'react'\nimport Contextpage from '../Contextpage';\nimport MovieCard from '../components/MovieCard.jsx';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Header from '../components/Header';\n// import { Pagebtn } from '../components/Pagebtn';\nimport { Helmet } from 'react-helmet';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { nanoid } from 'nanoid';\n\nfunction Upcoming() {\n\n  const { loader, setPage, page, fetchUpcoming, upcoming, totalPage } = useContext(Contextpage);\n\n  useEffect(() => {\n    setPage(1) // Reset Page to 1 on initial render.\n  }, []);\n\n  useEffect(() => {\n    if (page > 0) {\n      fetchUpcoming();\n    }\n  }, [page])\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Movies | Upcoming movies</title>\n      </Helmet>\n\n      <div className='w-full  md:p-10 mb-20 md:mb-0'>\n        <Header />\n        <motion.div\n          layout\n          className=\"flex flex-wrap relative justify-evenly md:justify-around\">\n          <AnimatePresence>\n            {\n              loader ? <span className=\"loader m-10\"></span> :\n                <>\n                  <InfiniteScroll\n                    className=\"w-full md:p-2 md:pt-10 flex flex-wrap relative justify-evenly md:justify-around\"\n                    dataLength={upcoming.length} //This is important field to render the next data\n                    next={() => setPage(page + 1)}\n                    hasMore={page < totalPage}\n                    loader={<span className=\"loader m-10\"></span>}\n                    scrollThreshol={0.9}\n                    style={{ overflow: 'hidden' }}\n                  >\n\n                    {upcoming.map((upc) => (\n                      <MovieCard key={nanoid()} movie={upc} />\n                    ))}\n\n                  </InfiniteScroll>\n\n                </>\n            }\n          </AnimatePresence>\n        </motion.div>\n        {/* <Pagebtn /> */}\n\n      </div>\n    </>\n  )\n}\n\nexport default Upcoming","/Users/admin/Desktop/movie/src/components/Detail.jsx",["131","132","133","134","135"],[],"import React, { useEffect, useState, useContext } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport Contextpage from '../Contextpage';\nimport { HiChevronLeft } from \"react-icons/hi\";\nimport noimage from '../assets/images/movies.jpg'\nimport { FaPlay } from \"react-icons/fa\";\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport slugify from 'react-slugify';\n\nexport const Detail = () => {\n  const APIKEY = process.env.REACT_APP_API_KEY;\n\n  const { loader, setLoader } = useContext(Contextpage);\n\n  const { id } = useParams()\n\n  const [moviedet, setMoviedet] = useState([]);\n  const [castdata, setCastdata] = useState([]);\n  const [moviegenres, setMoviegenres] = useState([]);\n  const [video, setVideo] = useState([]);\n\n  const fetchMovie = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}&language=en-US`\n    );\n    const moviedetail = await data.json();\n    setMoviedet(moviedetail);\n    // console.log(moviedetail);\n    setMoviegenres(moviedetail.genres);\n    setLoader(false);\n  };\n\n  const fetchCast = async () => {\n    const castdata = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${APIKEY}&language`\n    );\n    const castdetail = await castdata.json();\n    setCastdata(castdetail.cast);\n    setLoader(false);\n  }\n\n  const fetchVideo = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${APIKEY}&language=en-US`\n    );\n    const videodata = await data.json();\n    setVideo(videodata.results);\n    // console.log(videodata.results);\n  }\n\n  useEffect(() => {\n    fetchMovie();\n    fetchCast();\n    fetchVideo();\n  }, []);\n\n  \n  return (\n\n    <>\n      {\n        loader ? <div className='h-screen w-full flex justify-center items-center'><span className=\"loader m-10\"></span></div> :\n          <>\n            {/* poster */}\n            <div className='relative h-auto md:h-[82vh] flex justify-center'>\n              <div className='h-full w-full shadowbackdrop absolute'></div>\n              <h1 className='text-white absolute bottom-0 p-10 text-2xl md:text-6xl font-bold text-center'>{moviedet.title}</h1>\n              {moviedet.backdrop_path === null ? <img src={noimage} className='h-full w-full' /> : <img src={\"https://image.tmdb.org/t/p/original/\" + moviedet.backdrop_path} className='h-full w-full' />}\n\n            </div>\n\n            <div>\n\n              {/* overview */}\n              <h2 className='text-white text-center pt-5 px-3 md:px-60 font-Roboto text-[18px]'>{moviedet.overview}</h2>\n\n              <div className='text-blue-100 font-semibold my-3 flex justify-center'>\n                <h2 className='bg-blue-600/30 border-2 border-blue-700 py-2 px-3 rounded-full'>Release Date : {moviedet.release_date}</h2>\n              </div>\n\n              {/* tag */}\n              <div className='flex justify-center flex-wrap'>\n                {moviegenres.map((tag) => (\n                  <>\n                    <div key={tag.id} className='text-white font-semibold bg-gray-800 rounded-full px-4 py-1 m-2'>{tag.name}</div>\n                  </>\n                ))}\n              </div>\n            </div>\n\n            {/* cast */}\n            <div className='flex flex-col items-center'>\n              <h1 className=\"text-3xl text-yellow-400 font-semibold text-center p-2\">Cast</h1>\n\n              <div className=\"md:px-5 flex flex-row my-5 max-w-full flex-start overflow-x-auto relative\n              scrollbar-thin scrollbar-thumb-gray-500/20 scrollbar-track-gray-900/90 md:pb-3\">\n                {castdata.map((cast) => (\n                  <>\n                    {cast.profile_path !== null ? <>\n                      <div className='flex min-w-[9rem] md:min-w-[10rem] max-w-[9rem] md:max-w-[10rem] h-full items-center text-center flex-col mx-1'>\n                        <LazyLoadImage effect='blur' src={\"https://image.tmdb.org/t/p/w500\" + cast.profile_path} className=\"w-full h-full\" />\n                        <p className='text-white'>{cast.name}</p>\n                        <p className='text-yellow-400'>({cast.character})</p>\n                      </div>\n                    </> : null}\n                  </>\n                ))}\n              </div>\n            </div>\n\n            {/*/!* trailer *!/*/}\n            {/*<div className='flex justify-center items-center mb-10 gap-5 flex-wrap'>*/}\n            {/*  {Array.from(video).filter(trail => trail.type === \"Trailer\").map((trail, index) => (*/}\n            {/*    <>*/}\n            {/*        <>*/}\n            {/*          <a key={trail.id} href={'https://www.youtube.com/watch?v=' + trail.key} target=\"_blank\" className='flex border-2 border-red-600 bg-red-600/40 p-3 items-center justify-center gap-2 text-xl font-semibold rounded-full text-white'>*/}\n            {/*            <FaPlay />Watch trailer {Array.from(video).filter(trail => trail.type === \"Trailer\").length>1?index+1:\"\"}*/}\n            {/*          </a>*/}\n            {/*        </>*/}\n            {/*    </>*/}\n            {/*  ))*/}\n            {/*  }*/}\n            {/*</div>*/}\n\n            {/* watch movie */}\n            <div className='flex justify-center items-center mb-10 gap-5 flex-wrap'>\n              <Link  to={`/player/${id}/${slugify(moviedet.title)}`}\n               className='p-4 px-6 rounded-full transition duration-300 ease-in-out focus:outline-none focus:shadow-outline bg-red-700\n                hover:bg-red-900 flex items-center justify-center gap-2 text-xl font-semibold  text-white'>\n                <FaPlay />Watch Movie\n              </Link>\n            </div>\n          </>\n      }\n    </>\n  )\n}\n","/Users/admin/Desktop/movie/src/pages/Trending.jsx",["136","137"],[],"import React, { useEffect, useContext } from 'react'\nimport Contextpage from '../Contextpage';\nimport MovieCard from '../components/MovieCard.jsx';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Header from '../components/Header';\nimport { Helmet } from 'react-helmet';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { nanoid } from 'nanoid';\n\nfunction Trending() {\n\n    const { loader, page, setPage, fetchTrending, trending, totalPage } = useContext(Contextpage);\n\n    useEffect(() => {\n        setPage(1) // Reset Page to 1 on initial render.\n    }, []);\n\n    useEffect(() => {\n        if (page > 0) {\n            fetchTrending();\n        }\n    }, [page])\n\n\n    return (\n        <>\n            <Helmet>\n                <title>Movies | Trending</title>\n            </Helmet>\n\n            <div className='w-full  mb-20 md:mb-0'>\n            <Header />\n                <motion.div\n                    layout\n                    className=\"flex flex-wrap relative justify-evenly md:justify-around\">\n                                            <AnimatePresence>\n                        {\n                            loader ? <span className=\"loader m-10\"></span> :\n                                <>\n                                                                     <InfiniteScroll\n                                        className=\"w-full md:p-2 flex flex-wrap relative justify-evenly md:justify-around\"\n                                        dataLength={trending.length} //This is important field to render the next data\n                                        next={() => setPage(page + 1)}\n                                        hasMore={page < totalPage}\n                                        loader={<span className=\"loader m-10\"></span>}\n                                        scrollThreshol={0.9}\n                                        style={{ overflow: 'hidden' }}\n                                    >\n\n                                        {trending.map((tred) => (\n                                            <MovieCard key={nanoid()} movie={tred} />\n                                        ))}\n\n                                    </InfiniteScroll>\n\n                                </>\n                        }\n                    </AnimatePresence>\n                </motion.div>\n                {/* <Pagebtn /> */}\n\n            </div>\n        </>\n    )\n}\n\nexport default Trending","/Users/admin/Desktop/movie/src/pages/Container.jsx",["138","139"],[],"import React,{useEffect, useContext} from \"react\";\nimport Contextpage from '../Contextpage'\nimport Movies from \"../components/Movies\";\nimport { useParams } from 'react-router-dom'\nimport Search from \"../pages/Search\"\n\n\nfunction Container() {\n    const { setMovies } = useContext(Contextpage);\n    const { query } = useParams()\n    return (\n        <section>\n        {query ? <Search query={query} /> : <Movies />}\n        </section>\n    )\n}\n\nexport default Container;","/Users/admin/Desktop/movie/src/pages/Player.jsx",["140","141","142","143","144","145"],[],"import React, { useEffect, useContext, useRef } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { getSmashystreamUrl, getSuperembedUrl, get2embedUrl } from '../movies'\nimport { useState } from 'react'\nimport Contextpage from '../Contextpage'\nimport { HiChevronLeft } from \"react-icons/hi\";\nimport ReactPlayer from 'react-player'\nimport { FaPlay } from 'react-icons/fa'\n\n\nconst Player = () => {\n\n  const { setHeader } = useContext(Contextpage);\n  const [moviedet, setMoviedet] = useState([]);\n  const { id } = useParams()\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [showPlayButton, setShowPlayButton] = useState(true);\n  const playerRef = useRef(null);\n\n  const APIKEY = process.env.REACT_APP_API_KEY;\n  const fetchMovie = async () => {\n    const data = await fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${APIKEY}&language=en-US`\n    );\n    const moviedetail = await data.json();\n    setMoviedet(moviedetail);\n  };\n\n  useEffect(() => {\n    fetchMovie()\n    setHeader(\"Player\")\n  }, []);\n\n\n  const onClickButton = () => {\n    setIsPlaying(true)\n    setShowPlayButton(false);\n    // You can add additional logic here if needed\n    // playerRef.current?.seekTo(0);\n    // playerRef.current.play()\n  }\n\n  const handleOnEnded = () => {\n    // Show the play button again when the video ends\n    setShowPlayButton(true);\n  };\n\n  // setTimeout(() => {\n  //   isPlaying && setShowPlayButton(false);\n  // }, 3000);\n\n  document.title = `Movies | ${moviedet.title}`\n\n  return (\n    <div className=\"w-full relative \">\n      {/* <button onClick={()=>history.back()} className='fixed z-10 text-4xl text-black bg-white m-3 md:m-5 rounded-full'><HiChevronLeft /></button> */}\n      {showPlayButton && <button className={`${showPlayButton ? 'block' : 'hidden'} w-12 h-12 md:w-24 md:h-24 rounded-full bg-yellow-400 \n        absolute  top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 cursor-pointer z-50\n        focus:outline-none flex items-center justify-center`} onClick={() => onClickButton()}>\n        <FaPlay className='text-white text-lg md:text-3xl cursor-pointer' /></button>}\n      <ReactPlayer url='https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8'\n        controls={true}\n        playing={isPlaying}\n        onPause={()=> {\n          setShowPlayButton(true);\n          setIsPlaying(false);\n        }}\n        onPlay={onClickButton}\n        onEnded={handleOnEnded}\n        ref={playerRef}\n        playIcon={<div>ádasdk</div>}\n        width={\"100%\"} height={'100%'} />\n    </div>\n  )\n}\n\nexport default Player","/Users/admin/Desktop/movie/src/pages/Home.jsx",["146","147"],[],"import React, { useEffect, useContext } from 'react'\nimport {nanoid} from \"nanoid\";\nimport Contextpage from '../Contextpage';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport MovieCard from '../components/MovieCard.jsx';\nimport Header from '../components/Header';\nimport HeroMovies from '../components/HeroMovies.jsx';\n\n\nfunction Home() {\n\n    const { fetchTrending, loader, page, setPage, totalPage, setTrending, trending } = useContext(Contextpage);\n\n    useEffect(() => {\n        setPage(1) // Reset Page to 1 on initial render.\n        fetchTrending();\n    }, []);\n    \n    // useEffect(() => {\n    //     setMovies([])  // Reset movies on genre change so that movies of other genre will not appear at top.\n    //     setPage(0)\n    //     /* Set page to 0, it will automatically increment to 1 and will cause re render even if the page is already set to 1. The increment function is in context page.\n    //     It is important to set page to 0, as on changing genre, if page is already set to 1 then the fetch function will not work as the page state variable is not changed, that's why we are setting page to 0 to force re-render. \n    //     */\n    // }, [activegenre]);\n\n    // useEffect(() => {\n    //     console.log(trending);\n    //   console.log(page)\n    //     if (page > 0) {\n    //         fetchTrending();\n    //     }\n    // }, [page])\n\n    return (\n        // md:p-10\n        <div className='w-full   mb-20 md:mb-0'> \n            <motion.div\n                    layout\n                    className=\"flex flex-wrap relative justify-evenly md:justify-around\">\n                    <AnimatePresence>\n                        {\n                            loader ? <span className=\"loader m-10\"></span> :\n                            <HeroMovies key={trending[0].id} movie={trending[0]} />\n                        }\n                    </AnimatePresence>\n                </motion.div>\n            {/* <Genre /> */}\n            <Header />\n            <motion.div\n                layout\n                className=\"flex flex-wrap relative justify-evenly md:justify-around\">\n                <AnimatePresence>\n                    {\n                        loader ? <span className=\"loader m-10\"></span> :\n                            <>\n                                {/* {console.log(movies.length)} */}\n                                <InfiniteScroll\n                                    className=\"w-full md:p-2 flex flex-wrap relative justify-evenly md:justify-around\"\n                                    dataLength={trending.length} //This is important field to render the next data\n                                    next={() => setPage(page + 1)}\n                                    hasMore={page < totalPage}\n                                    loader={<span className=\"loader m-10\"></span>}\n                                    scrollThreshol={0.9}\n                                    style={{ overflow: 'hidden' }}\n                                >\n\n                                    {trending.map((trd) => (\n                                        <MovieCard key={nanoid()} movie={trd} />\n                                    ))}\n\n                                </InfiniteScroll>\n\n                            </>\n                    }\n                </AnimatePresence>\n            </motion.div>\n            {/* <Pagebtn /> */}\n\n        </div>\n    )\n}\n\nexport default Home;","/Users/admin/Desktop/movie/src/pages/Favoritepage.jsx",["148","149"],[],"import React, { useEffect, useContext, useState } from 'react'\nimport Header from '../components/Header';\nimport Contextpage from '../Contextpage';\nimport MovieCard from '../components/MovieCard.jsx';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Helmet } from 'react-helmet';\n\nfunction Favoritepage() {\n\n    const { loader, GetFavorite } = useContext(Contextpage);\n    const [localStorageData, setLocalStorageData] = useState([]);\n\n    useEffect(() => {\n        GetFavorite();\n\n        const data = localStorage;\n        setLocalStorageData(data);\n    }, []);\n\n    return (\n        <>\n          <Helmet>\n            <title>Movies | Favorite Movies</title>\n          </Helmet>\n            \n            <div className='w-full  md:p-10 mb-20 md:mb-0'>\n                <Header />\n                <motion.div\n                    layout\n                    className=\"w-full md:p-2 flex flex-wrap relative justify-evenly md:justify-around\">\n                    <AnimatePresence>\n                        {\n                            loader ? <span className=\"loader m-10\"></span> :\n                                <>\n                                    {\n                                        Object.keys(localStorageData).filter(key => !isNaN(key)).length == 0\n                                            ?\n                                            <p className=\"text-xl text-white\">Chưa có dấu trang nào!</p>\n                                            :\n                                            Object.keys(localStorageData).filter(key => !isNaN(key)).map((key, index) => (<MovieCard key={index} movie={{ ...JSON.parse(localStorageData[key]) }} />))\n                                    }\n                                </>\n                        }\n                    </AnimatePresence>\n                </motion.div>\n            </div>\n        </>\n    )\n}\n\nexport default Favoritepage","/Users/admin/Desktop/movie/src/components/MovieCard.jsx",["150","151","152","153"],[],"import React, { useState, useEffect ,useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport noimage from '../assets/images/no-image.jpg'\nimport { motion } from 'framer-motion'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { AiFillStar, AiOutlineStar} from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport Contextpage from '../Contextpage';\n\nfunction MovieCard({ movie }) {\n    const { user } = useContext(Contextpage);\n\n    const [isBookmarked, setIsBookmarked] = useState(null);\n\n    useEffect(() => {\n        if (localStorage.getItem(movie.id)) {\n            setIsBookmarked(true);\n        } else {\n            setIsBookmarked(false);\n        }\n    }, [movie.id]);\n\n    const BookmarkMovie = () => {\n        setIsBookmarked(!isBookmarked)\n        if (isBookmarked) {\n            localStorage.removeItem(movie.id);\n        } else {\n            localStorage.setItem(movie.id, JSON.stringify(movie));\n        }\n    }\n\n    return (\n        <div\n            // initial={{ opacity: 0 }}\n            // animate={{ opacity: 1 }}\n            // exit={{ opacity: 1 }}\n            // layout\n            className=\"card relative\n            transform transition duration-500 hover:scale-125 hover:z-30\n            w-full md:w-60 h-[410px] md:h-[360px] my-3 mx-4 md:my-5 md:mx-0 cursor-pointer\">\n            {/* bookmark buttons */}\n            <button className=\"absolute bg-black text-white p-2 z-20 right-0 m-3 rounded-full text-xl\" onClick={BookmarkMovie}> {isBookmarked ? <AiFillStar /> : <AiOutlineStar/>}</button>\n\n            \n            <div className='absolute bottom-0 w-full flex justify-between items-end p-3 z-20 bg-gradient-to-t from-black'>\n                <h1 className='text-white text-lg font-semibold  break-normal break-words'>{movie.title || movie.name}</h1>\n\n                {(movie.vote_average||0) > 7 ? <h1 className='font-bold text-green-500 p-2 bg-zinc-900 rounded-full'>{(movie.vote_average||0).toFixed(1)}</h1> : (movie.vote_average||0) > 5.5 ? <h1 className='font-bold text-orange-400 p-2 bg-zinc-900 rounded-full'>{(movie.vote_average||0).toFixed(1)}</h1> : <h1 className='font-bold text-red-600 p-2 bg-zinc-900 rounded-full'>{(movie.vote_average||0).toFixed(1)}</h1>}\n            </div>\n\n            <Link to={`/moviedetail/${movie.id}`} className='h-full w-full shadow absolute z-10'></Link>\n\n            <div>\n                {movie.poster_path === null ? <img className='img object-cover' src={noimage} /> :\n                    <LazyLoadImage effect='blur' className='img object-cover' src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path} />}\n            </div>\n        </div>\n    )\n}\n\nexport default MovieCard\n","/Users/admin/Desktop/movie/src/components/HeroMovies.jsx",["154","155","156"],[],"import React, { useState, useEffect ,useContext} from 'react'\nimport { Link } from 'react-router-dom'\nimport noimage from '../assets/images/no-image.jpg'\nimport { motion } from 'framer-motion'\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\nimport { AiFillStar, AiOutlineStar} from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport Contextpage from '../Contextpage';\n\nfunction HeroMovies({ movie }) {\n    const { user } = useContext(Contextpage);\n\n    const [isBookmarked, setIsBookmarked] = useState(null);\n        useEffect(() => {\n        if (localStorage.getItem(movie.id)) {\n            setIsBookmarked(true);\n        } else {\n            setIsBookmarked(false);\n        }\n    }, [movie.id]);\n\n    const BookmarkMovie = () => {\n        setIsBookmarked(!isBookmarked)\n            if (isBookmarked) {\n                localStorage.removeItem(movie.id);\n            } else {\n                localStorage.setItem(movie.id, JSON.stringify(movie));\n            }\n    }\n\n    return (\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 1 }}\n        layout\n        className=\"hero absolute -top-24  relative w-full h-screen  cursor-pointer overflow-hidden\">\n\n          {/* bookmark buttons */}\n          <button className=\"absolute bg-black text-white p-2 z-20 right-0 m-3 rounded-full text-xl\" onClick={BookmarkMovie}> {isBookmarked ? <AiFillStar /> : <AiOutlineStar/>}</button>\n\n\n          <div className='absolute bottom-4 left-4 w-[30%] flex justify-between items-end p-8 z-20  bg-gradient-to-t from-black'>\n              <div className='text-white'>\n                  <h1 className=' text-3xl font-semibold  break-normal break-words'>{movie.title || movie.name}</h1>\n                  <p className='py-8'>{movie.overview}</p>\n                  <Link to={`/moviedetail/${movie.id}`}\n                        className='p-4 px-6 rounded-full text-xl transition duration-300 ease-in-out focus:outline-none focus:shadow-outline bg-red-700  hover:bg-red-900'>\n                      Watch now\n                  </Link>\n              </div>\n          </div>\n\n\n\n          <div className=\"w-full h-full\">\n              {movie.poster_path === null ? <img className='img object-cover' src={noimage} /> :\n                <LazyLoadImage effect='blur' className='img object-cover'  style={{width: '100%', height: '100%'}}\n                               src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path} />}\n          </div>\n      </motion.div>\n    )\n}\n\nexport default HeroMovies;","/Users/admin/Desktop/movie/src/movies.js",[],[],"/Users/admin/Desktop/movie/src/components/Header.jsx",[],[],"/Users/admin/Desktop/movie/src/components/Searchbar.jsx",["157","158","159","160"],[],"import React, { useContext, useState } from 'react'\nimport { Helmet } from 'react-helmet';\nimport Contextpage from '../Contextpage';\nimport { useNavigate } from 'react-router-dom';\nimport slugify from 'react-slugify';\n\n\nfunction Searchbar() {\n\n  const { filteredGenre, fetchSearch, setBackGenre, setGenres } = useContext(Contextpage);\n  const [value, setValue] = useState(\"\");\n  const navigate = useNavigate();\n\n  const [typingTimeout, setTypingTimeout] = useState(null);\n\n  const handleSearch = () => {\n      // Clear the previous timeout to prevent premature execution\n      if (typingTimeout) {\n          clearTimeout(typingTimeout);\n      }\n\n      // Set a new timeout\n      const newTimeout = setTimeout(() => {\n          onKeyUp(value);\n      }, 500); // Adjust the timeout duration as needed (in milliseconds)\n\n      setTypingTimeout(newTimeout);\n  };\n\n  const onKeyUp = (query) => {\n    // console.log(query)\n    if (query !== \"\") {\n        query = query.trim();\n\n      if (query === \"\") {\n        navigate(\"/\");\n      } else {\n        navigate(`/search/${slugify(query)}`)\n      }\n    }\n  };\n\n  return (\n    <>\n    <Helmet>\n        <title>Movies</title>\n    </Helmet>\n\n    <div className='w-full md:max-w-[300px] h-full flex justify-center items-center my-4'>\n        <input\n          type=\"search\"\n          name=\"searchpanel\"\n          id=\"searchpanel\"\n          placeholder='Search Movie'\n          className='md:bg-transparent p-3 h-10 w-full md:mx-10 md:w-[40rem] rounded-xl outline-none focus:bg-slate-600'\n          onKeyUp={(e) => handleSearch()}\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </div>\n      </>\n  )\n}\n\nexport default Searchbar","/Users/admin/Desktop/movie/src/components/Movies.jsx",["161","162","163","164","165","166","167"],[],"import React, { useEffect, useContext } from 'react'\nimport Contextpage from '../Contextpage';\nimport MovieCard from './MovieCard.jsx';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport Genre from './Genre';\nimport Header from './Header';\n// import { Pagebtn } from './Pagebtn';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Trending from '../pages/Trending';\nimport HeroMovies from './HeroMovies.jsx';\nimport {uid} from \"react-uid\";\n\n\nfunction Movies() {\n\n    const { movies, loader, page, setPage, totalPage, genreList, activegenre, filteredGenre, fetchGenre } = useContext(Contextpage);\n   \n\n    useEffect(() => {\n        setPage(1) // Reset Page to 1 on initial render.\n    }, []);\n\n    useEffect(() => {\n        if (page > 0) {\n            fetchGenre();\n        }\n    }, [page])\n\n    \n    // // useEffect(() => {\n    // //     setMovies([])  // Reset movies on genre change so that movies of other genre will not appear at top.\n    // //     setPage(0)\n    // //     /* Set page to 0, it will automatically increment to 1 and will cause re render even if the page is already set to 1. The increment function is in context page.\n    // //     It is important to set page to 0, as on changing genre, if page is already set to 1 then the fetch function will not work as the page state variable is not changed, that's why we are setting page to 0 to force re-render. \n    // //     */\n    // // }, [activegenre]);\n\n    // useEffect(() => {\n    //     if (page > 0) {\n            \n    //         filteredGenre(); // Fetch filtered genre when page changes and only if page is greater than 0.\n    //     }\n    // }, [page])\n    // /* Page is dependency here, the funtion will only run if new page value is different from previous. \n    // That's why we are first setting page=0, then context page will automatically increment page=1 and the function will run. \n    // */\n\n\n    return (\n        // md:p-10\n        <div className='w-full   mb-20 md:mb-0'> ádasdádasd\n            {/* <motion.div\n                    layout\n                    className=\"flex flex-wrap relative justify-evenly md:justify-around\">\n                    <AnimatePresence>\n                        {\n                            loader ? <span className=\"loader m-10\"></span> :\n                            <HeroMovies key={movies[0].id} movie={movies[0]} />\n                        }\n                    </AnimatePresence>\n                </motion.div> */}\n            <Genre />\n            <Header />\n            <motion.div\n                layout\n                className=\"flex flex-wrap relative justify-evenly md:justify-around\">\n                <AnimatePresence>\n                    {\n                        loader ? <span className=\"loader m-10\"></span> :\n                            <>\n                                <InfiniteScroll\n                                    className=\"w-full md:p-2 flex flex-wrap relative justify-evenly md:justify-around\"\n                                    dataLength={genreList.length} //This is important field to render the next data\n                                    next={() => setPage(page + 1)}\n                                    hasMore={page < totalPage}\n                                    loader={<span className=\"loader m-10\"></span>}\n                                    scrollThreshol={0.9}\n                                    style={{ overflow: 'hidden' }}\n                                >\n\n                                    {genreList.map((movie, index) => (\n                                        <MovieCard key={uid(movie.id, index)} movie={movie} />\n                                    ))}\n\n                                </InfiniteScroll>\n\n                            </>\n                    }\n                </AnimatePresence>\n            </motion.div>\n            {/* <Pagebtn /> */}\n\n        </div>\n    )\n}\n\nexport default Movies\n\n\n//   `https://api.themoviedb.org/3/trending/all/day?api_key=b454aa11fb4b5fc5b515d2e80a898a1c&page=${page}`","/Users/admin/Desktop/movie/src/components/Genre.jsx",["168","169","170","171","172"],[],"import React, { useEffect, useContext } from 'react'\nimport Contextpage from '../Contextpage';\nimport {Helmet} from \"react-helmet\";\n\nfunction Genre() {\n    const { fetchGenre, activegenre, setActiveGenre, genres, setMovies, page, setPage, filteredGenre } = useContext(Contextpage);    \n\n\n    useEffect(() => {\n        fetchGenre();  // Fetching Genres on Initial Render.\n    }, [])\n\n    return (\n        <>\n        <Helmet>\n            <title>Movies</title>\n        </Helmet>\n\n        <div className='flex flex-wrap justify-center px-2'>\n            {\n                genres.map((genre) => (\n\n                    <button\n                        onClick={() => setActiveGenre(genre.id)}\n                        className={activegenre === genre.id ? 'active px-4 py-2 m-2 text-[15px] text-white font-semibold rounded-3xl' : 'px-4 py-2 m-2 text-[15px] bg-slate-800 text-white font-semibold rounded-3xl'} key={genre.id}>\n                        {genre.name}\n                    </button>\n\n                ))\n            }\n            </div>\n            </>\n    )\n}\n\nexport default Genre\n",{"ruleId":"173","severity":1,"message":"174","line":6,"column":8,"nodeType":"175","messageId":"176","endLine":6,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":13,"column":8,"nodeType":"175","messageId":"176","endLine":13,"endColumn":14},{"ruleId":"173","severity":1,"message":"178","line":7,"column":10,"nodeType":"175","messageId":"176","endLine":7,"endColumn":14},{"ruleId":"173","severity":1,"message":"179","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":23},{"ruleId":"173","severity":1,"message":"180","line":14,"column":37,"nodeType":"175","messageId":"176","endLine":14,"endColumn":41},{"ruleId":"173","severity":1,"message":"181","line":14,"column":43,"nodeType":"175","messageId":"176","endLine":14,"endColumn":50},{"ruleId":"173","severity":1,"message":"182","line":14,"column":52,"nodeType":"175","messageId":"176","endLine":14,"endColumn":61},{"ruleId":"173","severity":1,"message":"183","line":14,"column":63,"nodeType":"175","messageId":"176","endLine":14,"endColumn":72},{"ruleId":"173","severity":1,"message":"184","line":14,"column":74,"nodeType":"175","messageId":"176","endLine":14,"endColumn":85},{"ruleId":"173","severity":1,"message":"185","line":14,"column":87,"nodeType":"175","messageId":"176","endLine":14,"endColumn":100},{"ruleId":"186","severity":1,"message":"187","line":20,"column":8,"nodeType":"188","endLine":20,"endColumn":15,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":69,"column":89,"nodeType":"192","messageId":"193","endLine":69,"endColumn":91},{"ruleId":"186","severity":1,"message":"194","line":17,"column":6,"nodeType":"188","endLine":17,"endColumn":8,"suggestions":"195"},{"ruleId":"186","severity":1,"message":"196","line":23,"column":6,"nodeType":"188","endLine":23,"endColumn":12,"suggestions":"197"},{"ruleId":"173","severity":1,"message":"179","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":23},{"ruleId":"173","severity":1,"message":"198","line":21,"column":10,"nodeType":"175","messageId":"176","endLine":21,"endColumn":15},{"ruleId":"186","severity":1,"message":"199","line":56,"column":6,"nodeType":"188","endLine":56,"endColumn":8,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":69,"column":50,"nodeType":"203","endLine":69,"endColumn":97},{"ruleId":"201","severity":1,"message":"202","line":69,"column":100,"nodeType":"203","endLine":69,"endColumn":203},{"ruleId":"186","severity":1,"message":"194","line":16,"column":8,"nodeType":"188","endLine":16,"endColumn":10,"suggestions":"204"},{"ruleId":"186","severity":1,"message":"205","line":22,"column":8,"nodeType":"188","endLine":22,"endColumn":14,"suggestions":"206"},{"ruleId":"173","severity":1,"message":"207","line":1,"column":15,"nodeType":"175","messageId":"176","endLine":1,"endColumn":24},{"ruleId":"173","severity":1,"message":"183","line":9,"column":13,"nodeType":"175","messageId":"176","endLine":9,"endColumn":22},{"ruleId":"173","severity":1,"message":"178","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"173","severity":1,"message":"208","line":3,"column":10,"nodeType":"175","messageId":"176","endLine":3,"endColumn":28},{"ruleId":"173","severity":1,"message":"209","line":3,"column":30,"nodeType":"175","messageId":"176","endLine":3,"endColumn":46},{"ruleId":"173","severity":1,"message":"210","line":3,"column":48,"nodeType":"175","messageId":"176","endLine":3,"endColumn":60},{"ruleId":"173","severity":1,"message":"179","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":23},{"ruleId":"186","severity":1,"message":"211","line":32,"column":6,"nodeType":"188","endLine":32,"endColumn":8,"suggestions":"212"},{"ruleId":"173","severity":1,"message":"213","line":13,"column":62,"nodeType":"175","messageId":"176","endLine":13,"endColumn":73},{"ruleId":"186","severity":1,"message":"214","line":18,"column":8,"nodeType":"188","endLine":18,"endColumn":10,"suggestions":"215"},{"ruleId":"186","severity":1,"message":"216","line":18,"column":8,"nodeType":"188","endLine":18,"endColumn":10,"suggestions":"217"},{"ruleId":"190","severity":1,"message":"191","line":36,"column":105,"nodeType":"192","messageId":"193","endLine":36,"endColumn":107},{"ruleId":"173","severity":1,"message":"218","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":16},{"ruleId":"173","severity":1,"message":"219","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":15},{"ruleId":"173","severity":1,"message":"220","line":12,"column":13,"nodeType":"175","messageId":"176","endLine":12,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":55,"column":47,"nodeType":"203","endLine":55,"endColumn":97},{"ruleId":"173","severity":1,"message":"219","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":15},{"ruleId":"173","severity":1,"message":"220","line":12,"column":13,"nodeType":"175","messageId":"176","endLine":12,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":58,"column":45,"nodeType":"203","endLine":58,"endColumn":95},{"ruleId":"173","severity":1,"message":"185","line":10,"column":11,"nodeType":"175","messageId":"176","endLine":10,"endColumn":24},{"ruleId":"173","severity":1,"message":"221","line":10,"column":26,"nodeType":"175","messageId":"176","endLine":10,"endColumn":37},{"ruleId":"173","severity":1,"message":"222","line":10,"column":39,"nodeType":"175","messageId":"176","endLine":10,"endColumn":51},{"ruleId":"173","severity":1,"message":"223","line":10,"column":53,"nodeType":"175","messageId":"176","endLine":10,"endColumn":62},{"ruleId":"173","severity":1,"message":"174","line":9,"column":8,"nodeType":"175","messageId":"176","endLine":9,"endColumn":16},{"ruleId":"173","severity":1,"message":"224","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":18},{"ruleId":"173","severity":1,"message":"225","line":16,"column":13,"nodeType":"175","messageId":"176","endLine":16,"endColumn":19},{"ruleId":"173","severity":1,"message":"184","line":16,"column":66,"nodeType":"175","messageId":"176","endLine":16,"endColumn":77},{"ruleId":"173","severity":1,"message":"185","line":16,"column":79,"nodeType":"175","messageId":"176","endLine":16,"endColumn":92},{"ruleId":"186","severity":1,"message":"194","line":21,"column":8,"nodeType":"188","endLine":21,"endColumn":10,"suggestions":"226"},{"ruleId":"186","severity":1,"message":"227","line":27,"column":8,"nodeType":"188","endLine":27,"endColumn":14,"suggestions":"228"},{"ruleId":"173","severity":1,"message":"183","line":6,"column":62,"nodeType":"175","messageId":"176","endLine":6,"endColumn":71},{"ruleId":"173","severity":1,"message":"180","line":6,"column":73,"nodeType":"175","messageId":"176","endLine":6,"endColumn":77},{"ruleId":"173","severity":1,"message":"181","line":6,"column":79,"nodeType":"175","messageId":"176","endLine":6,"endColumn":86},{"ruleId":"173","severity":1,"message":"185","line":6,"column":88,"nodeType":"175","messageId":"176","endLine":6,"endColumn":101},{"ruleId":"186","severity":1,"message":"227","line":11,"column":8,"nodeType":"188","endLine":11,"endColumn":10,"suggestions":"229"},"no-unused-vars","'Trending' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'Link' is defined but never used.","'HiChevronLeft' is defined but never used.","'page' is assigned a value but never used.","'setPage' is assigned a value but never used.","'totalPage' is assigned a value but never used.","'setMovies' is assigned a value but never used.","'activegenre' is assigned a value but never used.","'filteredGenre' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSearch'. Either include it or remove the dependency array.","ArrayExpression",["230"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setPage'. Either include it or remove the dependency array.",["231"],"React Hook useEffect has a missing dependency: 'fetchUpcoming'. Either include it or remove the dependency array.",["232"],"'video' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCast', 'fetchMovie', and 'fetchVideo'. Either include them or remove the dependency array.",["233"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["234"],"React Hook useEffect has a missing dependency: 'fetchTrending'. Either include it or remove the dependency array.",["235"],"'useEffect' is defined but never used.","'getSmashystreamUrl' is defined but never used.","'getSuperembedUrl' is defined but never used.","'get2embedUrl' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchMovie' and 'setHeader'. Either include them or remove the dependency array.",["236"],"'setTrending' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchTrending' and 'setPage'. Either include them or remove the dependency array.",["237"],"React Hook useEffect has a missing dependency: 'GetFavorite'. Either include it or remove the dependency array.",["238"],"'motion' is defined but never used.","'toast' is defined but never used.","'user' is assigned a value but never used.","'fetchSearch' is assigned a value but never used.","'setBackGenre' is assigned a value but never used.","'setGenres' is assigned a value but never used.","'HeroMovies' is defined but never used.","'movies' is assigned a value but never used.",["239"],"React Hook useEffect has a missing dependency: 'fetchGenre'. Either include it or remove the dependency array.",["240"],["241"],{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"244","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"244","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [fetchSearch, query]",{"range":"264","text":"265"},"Update the dependencies array to be: [setPage]",{"range":"266","text":"267"},"Update the dependencies array to be: [fetchUpcoming, page]",{"range":"268","text":"269"},"Update the dependencies array to be: [fetchCast, fetchMovie, fetchVideo]",{"range":"270","text":"271"},{"range":"272","text":"267"},"Update the dependencies array to be: [fetchTrending, page]",{"range":"273","text":"274"},"Update the dependencies array to be: [fetchMovie, setHeader]",{"range":"275","text":"276"},"Update the dependencies array to be: [fetchTrending, setPage]",{"range":"277","text":"278"},"Update the dependencies array to be: [GetFavorite]",{"range":"279","text":"280"},{"range":"281","text":"267"},"Update the dependencies array to be: [fetchGenre, page]",{"range":"282","text":"283"},"Update the dependencies array to be: [fetchGenre]",{"range":"284","text":"285"},[760,767],"[fetchSearch, query]",[634,636],"[setPage]",[714,720],"[fetchUpcoming, page]",[1772,1774],"[fetchCast, fetchMovie, fetchVideo]",[592,594],[690,696],"[fetchTrending, page]",[1041,1043],"[fetchMovie, setHeader]",[641,643],"[fetchTrending, setPage]",[576,578],"[GetFavorite]",[718,720],[813,819],"[fetchGenre, page]",[378,380],"[fetchGenre]"]